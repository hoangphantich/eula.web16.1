{"version":3,"sources":["meteor://ðŸ’»app/packages/zimme_iron-router-active/packages/zimme_iron-router-active.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mF","file":"/packages/zimme_iron-router-active.js","sourcesContent":["(function () {\n\n/////////////////////////////////////////////////////////////////////////////\n//                                                                         //\n// packages/zimme:iron-router-active/client/helpers.coffee.js              //\n//                                                                         //\n/////////////////////////////////////////////////////////////////////////////\n                                                                           //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar func, helpers, isActive, name, testExp,\n  __hasProp = {}.hasOwnProperty;\n\nisActive = function(type, inverse) {\n  var name;\n  if (inverse == null) {\n    inverse = false;\n  }\n  name = 'is';\n  if (inverse) {\n    name = name + 'Not';\n  }\n  name = name + 'Active' + s.capitalize(type);\n  return function(view) {\n    var className, controller, isPath, pattern, regex, test, _ref;\n    if (!(view instanceof Spacebars.kw)) {\n      throw new Error((\"\" + name + \" options must be key value pair such \") + (\"as {{\" + name + \" regex='route/path'}}. You passed: \") + (\"\" + (JSON.stringify(view))));\n    }\n    pattern = {\n      className: Match.Optional(String),\n      regex: String\n    };\n    check(view.hash, pattern);\n    controller = Router.current();\n    if (!controller) {\n      return false;\n    }\n    _ref = view.hash, className = _ref.className, regex = _ref.regex;\n    if (className == null) {\n      className = inverse ? 'disabled' : 'active';\n    }\n    if (type === 'path') {\n      isPath = true;\n    }\n    test = testExp(controller, regex, isPath);\n    if (inverse) {\n      test = !test;\n    }\n    if (test) {\n      return className;\n    } else {\n      return false;\n    }\n  };\n};\n\ntestExp = function(controller, exp, isPath) {\n  var pattern, re, _ref;\n  if (isPath == null) {\n    isPath = false;\n  }\n  if (isPath) {\n    pattern = controller.location.get().path;\n  } else {\n    pattern = (_ref = controller.route) != null ? _ref.getName() : void 0;\n  }\n  re = new RegExp(exp, 'i');\n  return re.test(pattern);\n};\n\nhelpers = {\n  isActiveRoute: isActive('route'),\n  isActivePath: isActive('path'),\n  isNotActiveRoute: isActive('route', true),\n  isNotActivePath: isActive('path', true)\n};\n\nfor (name in helpers) {\n  if (!__hasProp.call(helpers, name)) continue;\n  func = helpers[name];\n  Template.registerHelper(name, func);\n}\n/////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}