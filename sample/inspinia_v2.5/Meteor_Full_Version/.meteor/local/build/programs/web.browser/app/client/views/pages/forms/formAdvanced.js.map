{"version":3,"sources":["meteor://ðŸ’»app/client/views/pages/forms/formAdvanced.js"],"names":[],"mappings":"yfile":"/client/views/pages/forms/formAdvanced.js","sourcesContent":["Template.formAdvanced.rendered = function(){\n\n    // Set options for cropper plugin\n\n    var $image = $(\".image-crop > img\")\n    $($image).cropper({\n        aspectRatio: 1.618,\n        preview: \".img-preview\",\n        done: function(data) {\n            // Output the result data for cropping image.\n        }\n    });\n\n    var $inputImage = $(\"#inputImage\");\n    if (window.FileReader) {\n        $inputImage.change(function() {\n            var fileReader = new FileReader(),\n                files = this.files,\n                file;\n\n            if (!files.length) {\n                return;\n            }\n\n            file = files[0];\n\n            if (/^image\\/\\w+$/.test(file.type)) {\n                fileReader.readAsDataURL(file);\n                fileReader.onload = function () {\n                    $inputImage.val(\"\");\n                    $image.cropper(\"reset\", true).cropper(\"replace\", this.result);\n                };\n            } else {\n                showMessage(\"Please choose an image file.\");\n            }\n        });\n    } else {\n        $inputImage.addClass(\"hide\");\n    }\n\n    $(\"#download\").click(function() {\n        window.open($image.cropper(\"getDataURL\"));\n    });\n\n    $(\"#zoomIn\").click(function() {\n        $image.cropper(\"zoom\", 0.1);\n    });\n\n    $(\"#zoomOut\").click(function() {\n        $image.cropper(\"zoom\", -0.1);\n    });\n\n    $(\"#rotateLeft\").click(function() {\n        $image.cropper(\"rotate\", 45);\n    });\n\n    $(\"#rotateRight\").click(function() {\n        $image.cropper(\"rotate\", -45);\n    });\n\n    $(\"#setDrag\").click(function() {\n        $image.cropper(\"setDragMode\", \"crop\");\n    });\n\n\n    // Initialize datapicker\n\n    $('#data_1 .input-group.date').datepicker({\n        todayBtn: \"linked\",\n        keyboardNavigation: false,\n        forceParse: false,\n        calendarWeeks: true,\n        autoclose: true\n    });\n\n    $('#data_2 .input-group.date').datepicker({\n        startView: 1,\n        todayBtn: \"linked\",\n        keyboardNavigation: false,\n        forceParse: false,\n        autoclose: true\n    });\n\n    $('#data_3 .input-group.date').datepicker({\n        startView: 2,\n        todayBtn: \"linked\",\n        keyboardNavigation: false,\n        forceParse: false,\n        autoclose: true\n    });\n\n    $('#data_4 .input-group.date').datepicker({\n        minViewMode: 1,\n        keyboardNavigation: false,\n        forceParse: false,\n        autoclose: true,\n        todayHighlight: true\n    });\n\n    $('#data_5 .input-daterange').datepicker({\n        keyboardNavigation: false,\n        forceParse: false,\n        autoclose: true\n    });\n\n    // Initialize switchery\n\n    var elem = document.querySelector('.js-switch');\n    var switchery = new Switchery(elem, { color: '#1AB394' });\n\n    var elem_2 = document.querySelector('.js-switch_2');\n    var switchery_2 = new Switchery(elem_2, { color: '#ED5565' });\n\n    var elem_3 = document.querySelector('.js-switch_3');\n    var switchery_3 = new Switchery(elem_3, { color: '#1AB394' });\n\n    $('.i-checks').iCheck({\n        checkboxClass: 'icheckbox_square-green',\n        radioClass: 'iradio_square-green',\n    });\n\n\n    // Initialize color picker\n\n    $('.demo1').colorpicker();\n\n    var divStyle = $('.back-change')[0].style;\n    $('#demo_apidemo').colorpicker({\n        color: divStyle.backgroundColor\n    }).on('changeColor', function(ev) {\n        divStyle.backgroundColor = ev.color.toHex();\n    });\n\n    var config = {\n        '.chosen-select'           : {},\n        '.chosen-select-deselect'  : {allow_single_deselect:true},\n        '.chosen-select-no-single' : {disable_search_threshold:10},\n        '.chosen-select-no-results': {no_results_text:'Oops, nothing found!'},\n        '.chosen-select-width'     : {width:\"95%\"}\n    }\n    for (var selector in config) {\n        $(selector).chosen(config[selector]);\n    }\n\n    // Initialize select2\n\n    $(\".select2_demo_1\").select2();\n    $(\".select2_demo_2\").select2();\n    $(\".select2_demo_3\").select2({\n        placeholder: \"Select a state\",\n        allowClear: true\n    });\n\n\n    // Initialize touch spin\n\n    $(\".touchspin1\").TouchSpin({\n        buttondown_class: 'btn btn-white',\n        buttonup_class: 'btn btn-white'\n    });\n\n    $(\".touchspin2\").TouchSpin({\n        min: 0,\n        max: 100,\n        step: 0.1,\n        decimals: 2,\n        boostat: 5,\n        maxboostedstep: 10,\n        postfix: '%',\n        buttondown_class: 'btn btn-white',\n        buttonup_class: 'btn btn-white'\n    });\n\n    $(\".touchspin3\").TouchSpin({\n        verticalbuttons: true,\n        buttondown_class: 'btn btn-white',\n        buttonup_class: 'btn btn-white'\n    });\n\n    // Initialize ionRangeSlider\n\n    $(\"#ionrange_1\").ionRangeSlider({\n        min: 0,\n        max: 5000,\n        type: 'double',\n        prefix: \"$\",\n        maxPostfix: \"+\",\n        prettify: false,\n        hasGrid: true\n    });\n\n    $(\"#ionrange_2\").ionRangeSlider({\n        min: 0,\n        max: 10,\n        type: 'single',\n        step: 0.1,\n        postfix: \" carats\",\n        prettify: false,\n        hasGrid: true\n    });\n\n    $(\"#ionrange_3\").ionRangeSlider({\n        min: -50,\n        max: 50,\n        from: 0,\n        postfix: \"Â°\",\n        prettify: false,\n        hasGrid: true\n    });\n\n    $(\"#ionrange_4\").ionRangeSlider({\n        values: [\n            \"January\", \"February\", \"March\",\n            \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\",\n            \"October\", \"November\", \"December\"\n        ],\n        type: 'single',\n        hasGrid: true\n    });\n\n    $(\"#ionrange_5\").ionRangeSlider({\n        min: 10000,\n        max: 100000,\n        step: 100,\n        postfix: \" km\",\n        from: 55000,\n        hideMinMax: true,\n        hideFromTo: false\n    });\n\n    // Initialize knob control\n    $(\".dial\").knob();\n\n\n    // Initialize noUi Slider\n    $(\"#basic_slider\").noUiSlider({\n        start: 40,\n        behaviour: 'tap',\n        connect: 'upper',\n        range: {\n            'min':  20,\n            'max':  80\n        }\n    });\n\n    $(\"#range_slider\").noUiSlider({\n        start: [ 40, 60 ],\n        behaviour: 'drag',\n        connect: true,\n        range: {\n            'min':  20,\n            'max':  80\n        }\n    });\n\n    $(\"#drag-fixed\").noUiSlider({\n        start: [ 40, 60 ],\n        behaviour: 'drag-fixed',\n        connect: true,\n        range: {\n            'min':  20,\n            'max':  80\n        }\n    });\n\n    // Initialie clockpicker\n    $('.clockpicker').clockpicker();\n\n    $('input[name=\"daterange\"]').daterangepicker();\n\n    $('#reportrange span').html(moment().subtract(29, 'days').format('MMMM D, YYYY') + ' - ' + moment().format('MMMM D, YYYY'));\n\n    $('#reportrange').daterangepicker({\n        format: 'MM/DD/YYYY',\n        startDate: moment().subtract(29, 'days'),\n        endDate: moment(),\n        minDate: '01/01/2012',\n        maxDate: '12/31/2015',\n        dateLimit: { days: 60 },\n        showDropdowns: true,\n        showWeekNumbers: true,\n        timePicker: false,\n        timePickerIncrement: 1,\n        timePicker12Hour: true,\n        ranges: {\n            'Today': [moment(), moment()],\n            'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],\n            'Last 7 Days': [moment().subtract(6, 'days'), moment()],\n            'Last 30 Days': [moment().subtract(29, 'days'), moment()],\n            'This Month': [moment().startOf('month'), moment().endOf('month')],\n            'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]\n        },\n        opens: 'right',\n        drops: 'down',\n        buttonClasses: ['btn', 'btn-sm'],\n        applyClass: 'btn-primary',\n        cancelClass: 'btn-default',\n        separator: ' to ',\n        locale: {\n            applyLabel: 'Submit',\n            cancelLabel: 'Cancel',\n            fromLabel: 'From',\n            toLabel: 'To',\n            customRangeLabel: 'Custom',\n            daysOfWeek: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr','Sa'],\n            monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n            firstDay: 1\n        }\n    }, function(start, end, label) {\n        console.log(start.toISOString(), end.toISOString(), label);\n        $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));\n    });\n\n};"]}