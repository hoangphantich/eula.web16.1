{"version":3,"sources":["meteor://ðŸ’»app/client/views/pages/dashboards/dashbarod-1.js"],"names":[],"mappings":"yfile":"/client/views/pages/dashboards/dashbarod-1.js","sourcesContent":["Template.dashboard1.helpers({\n\n    // For demo purpose\n    // Example of notification list\n    notifications : [\n        {number: 1, labelClass: 'success', content: 'Please contact me', time: '09:00 pm'},\n        {number: 2, labelClass: 'info', content: 'Sign a contract', time: '10:16 am'},\n        {number: 3, labelClass: 'primary', content: 'Open new shop', time: '08.22 pm'},\n        {number: 4, labelClass: 'default', content: 'Call back to Sylvia', time: '11:06 pm'},\n        {number: 5, labelClass: 'primary', content: 'Write a letter to Sandra', time: '12:00 pm'}\n    ]\n\n});\n\nTemplate.dashboard1.rendered = function(){\n\n    // Options, data for doughnut chart\n    var doughnutData = [\n        {\n            value: 300,\n            color: \"#a3e1d4\",\n            highlight: \"#1ab394\",\n            label: \"App\"\n        },\n        {\n            value: 50,\n            color: \"#dedede\",\n            highlight: \"#1ab394\",\n            label: \"Software\"\n        },\n        {\n            value: 100,\n            color: \"#A4CEE8\",\n            highlight: \"#A4CEE8\",\n            label: \"Laptop\"\n        }\n    ];\n\n    var doughnutOptions = {\n        segmentShowStroke: true,\n        segmentStrokeColor: \"#fff\",\n        segmentStrokeWidth: 2,\n        percentageInnerCutout: 45, // This is 0 for Pie charts\n        animationSteps: 100,\n        animationEasing: \"easeOutBounce\",\n        animateRotate: true,\n        animateScale: false\n    };\n\n    var ctx = document.getElementById(\"doughnutChart\").getContext(\"2d\");\n    var DoughnutChart = new Chart(ctx).Doughnut(doughnutData, doughnutOptions);\n\n\n    // Options/data for polar chart\n    var polarData = [\n        {\n            value: 300,\n            color: \"#a3e1d4\",\n            highlight: \"#1ab394\",\n            label: \"App\"\n        },\n        {\n            value: 140,\n            color: \"#dedede\",\n            highlight: \"#1ab394\",\n            label: \"Software\"\n        },\n        {\n            value: 200,\n            color: \"#A4CEE8\",\n            highlight: \"#A4CEE8\",\n            label: \"Laptop\"\n        }\n    ];\n\n    var polarOptions = {\n        scaleShowLabelBackdrop: true,\n        scaleBackdropColor: \"rgba(255,255,255,0.75)\",\n        scaleBeginAtZero: true,\n        scaleBackdropPaddingY: 1,\n        scaleBackdropPaddingX: 1,\n        scaleShowLine: true,\n        segmentShowStroke: true,\n        segmentStrokeColor: \"#fff\",\n        segmentStrokeWidth: 2,\n        animationSteps: 100,\n        animationEasing: \"easeOutBounce\",\n        animateRotate: true,\n        animateScale: false\n    };\n    var ctx = document.getElementById(\"polarChart\").getContext(\"2d\");\n    var Polarchart = new Chart(ctx).PolarArea(polarData, polarOptions);\n\n\n    // Options/data for flot chart\n    var data1 = [\n        [0,4],[1,8],[2,5],[3,10],[4,4],[5,16],[6,5],[7,11],[8,6],[9,11],[10,30],[11,10],[12,13],[13,4],[14,3],[15,3],[16,6]\n    ];\n    var data2 = [\n        [0,1],[1,0],[2,2],[3,0],[4,1],[5,3],[6,1],[7,5],[8,2],[9,3],[10,2],[11,1],[12,0],[13,2],[14,8],[15,0],[16,0]\n    ];\n\n    $(\"#flot-dashboard-chart\").length && $.plot($(\"#flot-dashboard-chart\"), [\n            data1, data2\n        ],\n        {\n            series: {\n                lines: {\n                    show: false,\n                    fill: true\n                },\n                splines: {\n                    show: true,\n                    tension: 0.4,\n                    lineWidth: 1,\n                    fill: 0.4\n                },\n                points: {\n                    radius: 0,\n                    show: true\n                },\n                shadowSize: 2\n            },\n            grid: {\n                hoverable: true,\n                clickable: true,\n                tickColor: \"#d5d5d5\",\n                borderWidth: 1,\n                color: '#d5d5d5'\n            },\n            colors: [\"#1ab394\", \"#1C84C6\"],\n            xaxis:{\n            },\n            yaxis: {\n                ticks: 4\n            },\n            tooltip: false\n        }\n    );\n\n    // Options and data for sparkline charts\n    $(\"#sparkline8\").sparkline([5, 6, 7, 2, 0, 4, 2, 4, 5, 7, 2, 4, 12, 14, 4, 2, 14, 12, 7], {\n        type: 'bar',\n        barWidth: 8,\n        height: '150px',\n        barColor: '#1ab394',\n        negBarColor: '#c6c6c6'}\n    );\n\n    $(\".bar_dashboard\").peity(\"bar\", {\n        fill: [\"#1ab394\", \"#d7d7d7\"],\n        width:100\n    });\n\n    var updatingChart = $(\".updating-chart\").peity(\"line\", { fill: '#1ab394',stroke:'#169c81', width: 64 })\n\n    setInterval(function() {\n        var random = Math.round(Math.random() * 10)\n        var values = updatingChart.text().split(\",\")\n        values.shift()\n        values.push(random)\n\n        updatingChart\n            .text(values.join(\",\"))\n            .change()\n    }, 1000);\n\n};"]}